//----------------------------------------------------------------------------------
//TODO List
//----------------------------------------------------------------------------------
..热数据和冷数据分组和应用？？？

..HBase 的具体应用场景分析？？？


//----------------------------------------------------------------------------------
//资源收藏
//----------------------------------------------------------------------------------
推荐一篇文章，旅游网站的策划书
http://www.docin.com/p-345705509.html
http://www.docin.com/p-299356673.html

路114的起源哈，我觉得01在这些方面还是很有些创意的，但往往没有做深做细
http://www.366club.com/users/658/article/3438.html  

互联网创业
http://www.36kr.com/p/90884.html

旅游社交
https://path.com
http://www.wanderfly.com
http://tukeq.com
http://www.roadqu.com
http://117go.com
www.youxiake.com
www.wayn.com 国外的旅游社区网站
www.hicafa.cn,国内的旅游社交
http://www.ziyou.com/

自驾游信息网
http://www.xz5u.com

又拍云
https://www.upyun.com


http://www.36kr.com/p/94226.html
timeline 在 回忆中的应用；

//----------------------------------------------------------------------------------
//后端技术收藏
//----------------------------------------------------------------------------------
..Cached 设计
  ..基于 “一致性哈希算法”， 进行缓存的分布式存放； 
    ..概念突出以下几点:
      ..避免Cached Node 的增加和减少， 造成整个Cached 群中 Cached 主机寻址的大量失效；（原有的经典算法是 server_num = hash(key) mod num） 
      ..同一key的数据， 冗余的保存多分， 避免由于某 Cached Node 的宕机，而造成缓存的失效；
    ..具体做法
      ..SHA1(Mac(host_x)): 取主机MAC地址的哈希值 作为 主机的标识； 
      ..取 h = hash(key)的值， 与 主机标识进行比较， 找到 h > host_id 的第一台主机，然后在相邻的 k 台主机上各存一份 key 的数据；

  ..缓存 需要进行压缩， 可以使用快速压缩算法 （gzip, dozo）
   （缓存主机和应用主机之间的网络流量非常密集和大，如果不压缩数据， 网络带宽很容易过载而成为系统的瓶颈）

..CDN (Content Delivery Network)
  ..用于存储静态资源（js, 图片， 视频， 其他资源）;


//----------------------------------------------------------------------------------
//前端技术收藏
//----------------------------------------------------------------------------------


//----------------------------------------------------------------------------------
//日常会议日志
//----------------------------------------------------------------------------------
[2012-05-01]



[2012-04-25]
..前端开发
  ..技术准备 
    ..建立好Titanium的开发环境；
    ..通看目前收集的Ti网络资源中，信息的分类和目录结构，做到问题心中有数；
    ..熟悉 js 在 Ti 中开发的必要约束: 例如变量的作用域， 开发的最佳实践；<http://rensanning.iteye.com/blog/1469217> 
    ..整理应用层的JS开发框架：类继承，工具类, 网络操作， 窗口操作等; 可以 利用现成的框架 prototype， extjs.core;
    ..通看ti培训视频中关于 ui 操作和使用的 部分， 以及 网络通讯的使用； 

  ..需求熟悉
    ..研究“在路上”这个手机应用的实现效果， 我们的大致上就做成那样；
    ..理解本次 项目的 宗旨， “让自驾变得更简单， 整个线下的自驾游资源， 自驾游服务商信息， 做中国最大的自驾游导航网站”


[2012-04-21]
..第二次讨论 移动端 概念设计

..需求讨论
  ..“让自驾变得更简单， 整个线下的自驾游资源， 自驾游服务商信息， 做中国最大的自驾游导航网站”
  ..引入自驾游供应商
  ..自驾游供应商维护线路和信息；
  ..自驾游供应商发起旅程活动（类似用户的旅程计划）；

..手机概念设计
  ..增加活动；
  ..去掉计划中，行程中，不必要的行程编辑， 保留邀请朋友进行行程讨论；

[2012-04-18]
..第一次讨论 移动端 概念设计


[2012-04-08]
近期任务安排及时间节点：

<04-15>
  网站端开发:
      网站页面设计效果；（需考虑数据的发布方式和操作）
      系统开发框架搭建；myEclipse, spring 3.0, RESTful, ajax, jQuery, helloword<整体刷新， div 局部刷新>
      数据库设计；
      系统架构设计；
      系统安全设计；
  
  移动端开发：
      概念设计；
      确定开发人员；
      申请app store的账号；
 
  数据整理：
      4月10日， 整理2条西藏自驾游线路，确定摸排数据特点；确定数据收集"excel模板"；

<05-01>
  申请VPS主机，便于内部测试和应用部署；

<05-15>
  iPhone 应用原型，完整的界面逻辑、模拟数据接口；

<05-25>
  完成100条线路的收集， 和数据导入，

<06-01>
  租用正式应用的主机；
  
<06-15>
  应用上线；

[2012-04-01]
确定事宜：
  开发语言： Java；
  开发框架： ？？；
  数据库：   mysql；
  缓存库：   nosql(redis, memcached);
  webserver: apache, nginx;
  appserver: tomcat;

ltao： 
   开发：
       整理基于java 的后端开发框架， 开发工具
       具体要求：
           1.页面 RESTful 的 访问方式； 
           2.便于jQuery的ajax调用； 
           3.框架能 保证 功能页面 的 MVC的架构清晰；
                 View 完成前台信息布局+js效果+js控制， 
                 Controller: 负责数据访问、后台逻辑的控制， Ajax 服务入口（控制器是服务入口，函数是Action）；
   团队：
     网站端页面设计人选；
            
zdwei：
   开发：
     数据库设计
	   
   团队： 
     iPhone 移动端的开发人选；
     网站端页面设计人选；

   
[2012-03-25]
移动端的概念设计
    设计思想：功能尽量简单，保留移动端必要的线路查询、信息查询、旅程管理、实时分享等功能；
    功能架构：见jpg；
    设计参考：path.com 
    不足之处：目前罗列了参考要素， 未能形成需要开发的版本的功能设计和功能流程说明；

商业计划书
    商业模式： 网站流量导入<租车、装备>、自驾活动组织（车商、自驾需求方<移动、电信客户回馈>）, 

[2012-03-23]
完成网站端的功能要点分析， 概念设计；
（不足之处： 设计过于功能化， 如果提高用户体验需要加强）

[2012-03-17]
研究git的各种功能；

[2012-03-16]
这是cbill的工作日志；